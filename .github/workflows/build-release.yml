name: Build Resume and Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type'
        required: true
        default: 'draft'
        type: choice
        options:
          - draft
          - release
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      # Set up Rust so we can use Cargo to install typst-cli.
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Ensure Cargo's bin directory is in the PATH.
      - name: Add Cargo bin to PATH
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      # Install Typst CLI via Cargo in release mode.
      - name: Install typst-cli via Cargo
        run: cargo install --locked typst-cli

      - name: Set version tag for manual trigger
        if: github.event_name == 'workflow_dispatch' && inputs.version != ''
        run: |
          git tag ${{ inputs.version }}
          echo "RELEASE_TAG=${{ inputs.version }}" >> $GITHUB_ENV

      - name: Set version tag for push trigger
        if: github.event_name == 'push'
        run: |
          echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build Resume
        run: |
          typst compile resume.typ resume.pdf
        continue-on-error: false  # Fail if compilation fails

      - name: Set file name
        id: filename
        run: |
          echo "FILENAME=${FIRST_NAME}_${SUR_NAME}_Resume_$(date +%Y-%m-%d).pdf" >> $GITHUB_ENV
        env:
          FIRST_NAME: ${{ vars.FIRST_NAME }}
          SUR_NAME: ${{ vars.SUR_NAME }}

      - name: Rename PDF file
        run: mv resume.pdf "${{ env.FILENAME }}"

      - name: Generate Release Notes
        id: release_notes
        run: |
          echo "NOTES<<EOF" >> $GITHUB_ENV
          echo "## Changes in this release" >> $GITHUB_ENV
          echo "$(git log --pretty=format:'- %s' $(git describe --tags --abbrev=0 HEAD^)..HEAD)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: ${{ env.FILENAME }}
          retention-days: 7
          if-no-files-found: error

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' || inputs.release_type == 'release'
        with:
          name: "Resume ${{ env.RELEASE_TAG }} (${{ env.DATE }})"
          body: ${{ env.NOTES }}
          files: ${{ env.FILENAME }}
          draft: ${{ github.event.inputs.release_type == 'draft' }}
          prerelease: false
          tag_name: ${{ env.RELEASE_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATE: ${{ env.DATE }}

      - name: Upload as Draft
        uses: actions/upload-artifact@v4
        if: github.event_name == 'workflow_dispatch' && inputs.release_type == 'draft'
        with:
          name: draft-resume
          path: ${{ env.FILENAME }}
          retention-days: 1
